---
import { Image } from '@astrojs/image/components';

export interface Props {
	author: string;
	source?: string;
    image?: string;
}

const { author, source, image } = Astro.props;

let Rendered = `<></>`
let imageClasses = {
    parent: "2xl:grid 2xl:grid-cols-4",
    quoteParent: "2xl:col-span-3",
    image: "hidden lg:block w-full my-auto ml-5"
}

if (source) Rendered = `<span class="text-grey-card">, ${source}</span>`
---

<div class={`lg:mx-12 align-middle mt-12 lg:my-auto ${image ? imageClasses.parent : ""}`}>
   <div class={`flex flex-col gap-6 align-middle ${image ? imageClasses.quoteParent : ""}`}>
        <blockquote class="text-4xl italic font-semibold text-grey-card">
            <svg id={"quoteicn"} aria-hidden="true" class="w-10 h-10 text-grey-card/80" viewBox="0 0 24 27" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14.017 18L14.017 10.609C14.017 4.905 17.748 1.039 23 0L23.995 2.151C21.563 3.068 20 5.789 20 8H24V18H14.017ZM0 18V10.609C0 4.905 3.748 1.038 9 0L9.996 2.151C7.563 3.068 6 5.789 6 8H9.983L9.983 18L0 18Z" fill="currentColor"></path></svg>
            <p><slot /></p>
        </blockquote>
        <figcaption class="text-left text-4xl font-bold text-black">
            <p>- <span onclick={`test()`}>{author}</span>{source ? <span class="text-grey-card">, {source}</span> : <></>}</p>
        </figcaption>
   </div>
   {image ? <Image src={image} alt="" width={310} height={512} class={imageClasses.image} /> : <></>}
</div>